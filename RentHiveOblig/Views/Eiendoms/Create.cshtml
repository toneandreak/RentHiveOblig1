@model RentHiveOblig.ViewModels.EiendomViewModel

@{
    ViewData["Title"] = "Create";
}

<link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
<link rel="stylesheet" href="~/RentHiveOblig.styles.css" asp-append-version="true" />
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Comfortaa:wght@300&display=swap" rel="stylesheet">

<style>
    #regForm {
        margin: 100px auto;
        padding: 40px;
        padding-top:0px;
        width: 70%;
        min-width: 300px;
    }

    /* Style the input fields */
    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

        /* Mark input boxes that gets an error on validation: */
        input.invalid {
            background-color: #ffdddd;
        }

    /* Hide all steps by default: */
    .tab {
        display: none;
        transition: opacity 1s ease-in-out; 
    }

    .tab img{
        height: 350px;
        width: auto; 
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15%;
        margin: 0 0px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 7%;
        display: inline-block;
        opacity: 0.5;
    }

        /* Mark the active step: */
        .step.active {
            opacity: 1;
        }

        /* Mark the steps that are finished and valid: */
        .step.finish {
            background-color: #04AA6D;
        }


        .wrapper{
            height: 60px;
            min-width: 60px; 
            display: flex;
            align-items: center;
            justify-content: center;
            background: #fff;
            border-radius: 12px; 
            box-shadow: 0 3px 8px rgba(0,0,0,0.2);
        }

        .wrapper span{

            width: 100%;
            text-align: center;
            font-size:58px; 
            font weight: 550; 
            cursor: pointer; 

        }

        .wrapper span.num{
            font-size: 45px;
            border-right: 3px solid rgba(0,0,0.2);
            border-left: 3px solid rgba(0,0,0.2);

        }




</style>




<!---Code for MultiStep-form inspired from W3Schools: https://www.w3schools.com/howto/howto_js_form_steps.asp?-->



<div style="text-align:center;margin-bottom:15px">
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
    <span class="step"></span>
</div>


<form asp-action="Create" method="post" id="regForm">




    <!-- One "tab" for each step in the form: -->

    <div class="tab">

        <h3>Introduce your beehive</h3>


        <div class="form-group">
            <label for="Tittel">Title</label>
            <input asp-for="Tittel" class="form-control" id="Tittel" placeholder="Enter a catchy title here" title="Your title will be displayed along with the picture and serves as a first impression.">
            <span asp-validation-for="Tittel" class="text-danger"></span>
        </div>


        <div class="form-group">
            <label for="Beskrivelse">Description</label>
            <textarea asp-for="Beskrivelse" class="form-control" id="Beskrivelse" placeholder="Describe your apartment" title="The description provides potential renters with more details about your apartment." rows="6" cols="7"></textarea>
            <span asp-validation-for="Beskrivelse" class="text-danger"></span>
        </div>

    </div>



    <div class="tab">

        <h3>Address Details</h3>

        <div class="form-group">
            <label for="Street">Street</label>
            <input asp-for="Street" class="form-control" placeholder="e.g., Pilestredet 35" id="Street">
            <span asp-validation-for="Street" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="City">City</label>
            <input asp-for="City" class="form-control" id="City" placeholder="e.g., Oslo">
            <span asp-validation-for="City" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="Country">Country</label>
            <input asp-for="Country" class="form-control" placeholder="e.g., Norway" id="Country">
            <span asp-validation-for="Country" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="ZipCode">Zip Code</label>
            <input asp-for="ZipCode" class="form-control" placeholder="e.g., 0176 "id="ZipCode">
            <span asp-validation-for="ZipCode" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label for="State">State (Optional)</label>
            <input asp-for="State" class="form-control" id="State">
            <span asp-validation-for="State" class="text-danger"></span>
        </div>

    </div>

    <div class="tab">

        <h3>How many bathrooms does your apartment have?</h3>

        <img src="~/icons/bathroom_icon.svg"/>


        <div class="form-group">

            <input asp-for="Bad" type="hidden" class="form-control" id="BathroomHidden" value="1">

        <div class="wrapper">
            <span class="minus-bathroom">-</span>
                <span class="number-bathroom" id="Bad">1</span>
                <span class="plus-bathroom">+</span>
            <span asp-validation-for="Bad" class="text-danger"></span>
        </div>


        </div>

    </div>


    <div class="tab">
        <div class="form-group">

            <h3>How many bedrooms does your apartment have?</h3>

            <img src="/Icons/bedroom.svg" alt="Bedroom icon"/>

            <div class="wrapper">
                <span class="minus-bedroom">-</span>
                <span class="number-bedroom" id="Soverom">1</span>
                <span class="plus-bedroom">+</span>
                <span asp-validation-for="Soverom" class="text-danger"></span>
            </div>
            <input asp-for="Soverom" type="hidden" class="form-control" id="BedroomHidden" value="1">
        </div>
    </div>



    <div class="tab">

        <h3>Finally, how much would you charge for a stay in your apartment?</h3>

        <div class="form-group">
            <input asp-for="PrisPerNatt" class="form-control" placeholder="Enter price per night" title="It might be a good idea to check what other renters are charging for similar properties." id="PrisPerNatt">
            <span asp-validation-for="PrisPerNatt" class="text-danger"></span>
        </div>

    </div>




    <div style="overflow:auto;">
        <div>
            <button class="btn btn-secondary" type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
            <button class="btn btn-primary" type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
        </div>
    </div>

    <!-----button type="submit" class="btn btn-primary">Create</button>--->

</form>



<script>


    //FOR THE BATHROOM INPUT

    const plusBathroom = document.querySelector(".plus-bathroom");
    const minusBathroom = document.querySelector(".minus-bathroom");
    const numberBathroom = document.querySelector(".number-bathroom");
    const hiddenBathroom = document.getElementById("BathroomHidden");

    let a = 1;
    plusBathroom.addEventListener("click", () => {
        a++;
        numberBathroom.innerText = a;
        hiddenBathroom.value = a;  
    });

    minusBathroom.addEventListener("click", () => {
        if (a === 0) {
            a = 0;
            numberBathroom.innerText = 0;
        } else {
            a--;
            numberBathroom.innerText = a;
        }
        hiddenBathroom.value = a; 
    });

    //FOR THE BEDROOM INPUT

    const plusBedroom = document.querySelector(".plus-bedroom");
    const minusBedroom = document.querySelector(".minus-bedroom");
    const numberBedroom = document.querySelector(".number-bedroom");
    const hiddenBedroom = document.getElementById("BedroomHidden");

    let b = 1;

    plusBedroom.addEventListener("click", () => {
        b++;
        numberBedroom.innerText = b;
        hiddenBedroom.value = b;
    });

    minusBedroom.addEventListener("click", () => {
        if (b === 0) {
            b = 0;
            numberBedroom.innerText = 0;
        } else {
            b--;
            numberBedroom.innerText = b;
        }
        hiddenBedroom.value = b;
    });



    // Again code for MultiStep - form inspired from W3Schools: https://www.w3schools.com/howto/howto_js_form_steps.asp

        var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the current tab

    function showTab(n) {
        // This function will display the specified tab of the form ...
        var x = document.getElementsByClassName("tab");

        x[n].style.display = "block";
        x[n].style.opacity = 0;  // Initially set to transparent

        setTimeout(function () {
            x[n].style.opacity = 1;
        }, 200); 

        // ... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Submit";
        } else {
            document.getElementById("nextBtn").innerHTML = "Next";
        }
        // ... and run a function that displays the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
       
        var x = document.getElementsByClassName("tab");

        if (n == 1 && !validateForm()) return false;

        // Fade out current tab
        x[currentTab].style.opacity = 0;

        setTimeout(function () {
            x[currentTab].style.display = "none";

            // Increase or decrease the current tab index
            currentTab = currentTab + n;

            // Show the next tab
            if (currentTab >= x.length) {
                document.getElementById("regForm").submit();
            } else {
                showTab(currentTab);
            }
        }, 1000); // The duration here should match the transition duration in your CSS (in milliseconds)
    }


    function validateForm() {
        // This function deals with validation of the form fields
        var x, y, i, valid = true;
        x = document.getElementsByClassName("tab");
        y = x[currentTab].getElementsByTagName("input");
        // A loop that checks every input field in the current tab:
        for (i = 0; i < y.length; i++) {
            // If a field is empty...
            if (y[i].value == "") {
                // add an "invalid" class to the field:
                y[i].className += " invalid";
                // and set the current valid status to false:
                valid = false;
            }
        }
        // If the valid status is true, mark the step as finished and valid:
        if (valid) {
            document.getElementsByClassName("step")[currentTab].className += " finish";
        }
        return valid; // return the valid status
    }


    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class to the current step:
        x[n].className += " active";
    }

</script>

